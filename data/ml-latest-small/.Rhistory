time_stamp.bins <- cut(sub$time_stamp[idx], breaks = edges, include.lowest = TRUE);
var.bins  <- paste(sub$var[idx], time_stamp.bins, sep='.');
values <- sub$value[idx];
last.x <- tapply(X=values, INDEX=var.bins, tail, n = 1);}
x[x$pid == i,'0-24NIDiasAB']<-last.x['NIDiasAB.(720,1.44e+03]']
x[x$pid == i,'12-36NIDiasAB']<-last.x['NIDiasAB.(1.44e+03,2.16e+03]']
x[x$pid == i,'24-48NIDiasAB']<-last.x['NIDiasAB.(2.16e+03,2.88e+03]']
#do NISysABP:
idx = which(sub$variable== 'NISysABP')
if(length(idx)>0){
time_stamp.bins <- cut(sub$time_stamp[idx], breaks = edges, include.lowest = TRUE);
var.bins  <- paste(sub$var[idx], time_stamp.bins, sep='.');
values <- sub$value[idx];
last.x <- tapply(X=values, INDEX=var.bins, tail, n = 1);}
x[x$pid == i,'0-24NISysABP']<-last.x['NISysABP.(720,1.44e+03]']
x[x$pid == i,'12-36NISysABP']<-last.x['NISysABP.(1.44e+03,2.16e+03]']
x[x$pid == i,'24-48NISysABP']<-last.x['NISysABP.(2.16e+03,2.88e+03]']
break;
}
#large_file[,paste(names(last.x), 'last', sep='.')] <- last.x;
#last_value <- tapply(X=large_file$variable[idx], INDEX=large_file$variable[idx], tail, n = 1)
#data frame x for EM
#vars.l <- $name[(!vars$name %in% large_file$variable)]
#idx <- which(large_file$var %in% vars.l);
#last_24.bp <- tapply(X=d$value[idx], INDEX=d$var[idx], tail, n = 1)
x
x[1]
x[1,]
require(sampling)
require(caTools)
## Clean workspace
rm(list=ls());
setwd("/Users/ning/Desktop/cs497r/EM\ on\ matrix\ normal/")
result_data = read.csv("./data/Outcomes-a.txt")  # read csv file
large_file = read.csv("./small_file.txt")
my_small_result = result_data[1:100, ]
#stratified sampling based on the same mortality rate:
#70% train, 30% test
train_rows = sample.split(my_small_result$In.hospital_death, SplitRatio=0.7)
train = my_small_result[train_rows,]
test  = my_small_result[train_rows==FALSE,]
#test if it is the correct split:
#dim(train[train$mortality==0,])/dim(test[train$mortality==0,])
#class 0 (not die):
class0_pid = train[train$In.hospital_death == 0, "RecordID"]
#class0_pid
#large file preprocessing:
large_file$time_stamp <- as.character(large_file$time_stamp);
large_file$time_stamp <- sapply(strsplit(large_file$time,":"), function(y) { y <- as.numeric(y); y[1]*60 + y[2]; });
#moving window and time bins
time_resolution = 24
window = 12
edges  <- seq(0, 60*48, by = 60*window);
#for each patient
x <- data.frame(
'pid' = class0_pid
)
for(i in x$pid){
print(x$pid)
#get subsample:
sub = large_file[large_file$pid==i,];
#  print(sub)
#do HR:
idx = which(sub$variable== 'HR')
if(length(idx)>0){
time_stamp.bins <- cut(sub$time_stamp[idx], breaks = edges, include.lowest = TRUE);
var.bins  <- paste(sub$var[idx], time_stamp.bins, sep='.');
values <- sub$value[idx];
last.x <- tapply(X=values, INDEX=var.bins, tail, n = 1);}
x[x$pid == i,'0-24HR']<-last.x[3]
x[x$pid == i,'12-36HR']<-last.x[1]
x[x$pid == i,'24-48HR']<-last.x[2]
#do Temperature:
idx = which(sub$variable== 'Temp')
if(length(idx)>0){
time_stamp.bins <- cut(sub$time_stamp[idx], breaks = edges, include.lowest = TRUE);
var.bins  <- paste(sub$var[idx], time_stamp.bins, sep='.');
values <- sub$value[idx];
last.x <- tapply(X=values, INDEX=var.bins, tail, n = 1);}
x[x$pid == i,'0-24Temp']<-last.x[3]
x[x$pid == i,'12-36Temp']<-last.x[1]
x[x$pid == i,'24-48Temp']<-last.x[2]
#do RespRate:
idx = which(sub$variable== 'RespRate')
if(length(idx)>0){
time_stamp.bins <- cut(sub$time_stamp[idx], breaks = edges, include.lowest = TRUE);
var.bins  <- paste(sub$var[idx], time_stamp.bins, sep='.');
values <- sub$value[idx];
last.x <- tapply(X=values, INDEX=var.bins, tail, n = 1);}
x[x$pid == i,'0-24RespRate']<-last.x[3]
x[x$pid == i,'12-36RespRate']<-last.x[1]
x[x$pid == i,'24-48RespRate']<-last.x[2]
#do RespRate:
idx = which(sub$variable== 'NIDiasAB')
if(length(idx)>0){
time_stamp.bins <- cut(sub$time_stamp[idx], breaks = edges, include.lowest = TRUE);
var.bins  <- paste(sub$var[idx], time_stamp.bins, sep='.');
values <- sub$value[idx];
last.x <- tapply(X=values, INDEX=var.bins, tail, n = 1);}
x[x$pid == i,'0-24NIDiasAB']<-last.x['NIDiasAB.(720,1.44e+03]']
x[x$pid == i,'12-36NIDiasAB']<-last.x['NIDiasAB.(1.44e+03,2.16e+03]']
x[x$pid == i,'24-48NIDiasAB']<-last.x['NIDiasAB.(2.16e+03,2.88e+03]']
break;
#do NISysABP:
idx = which(sub$variable== 'NISysABP')
if(length(idx)>0){
time_stamp.bins <- cut(sub$time_stamp[idx], breaks = edges, include.lowest = TRUE);
var.bins  <- paste(sub$var[idx], time_stamp.bins, sep='.');
values <- sub$value[idx];
last.x <- tapply(X=values, INDEX=var.bins, tail, n = 1);}
x[x$pid == i,'0-24NISysABP']<-last.x['NISysABP.(720,1.44e+03]']
x[x$pid == i,'12-36NISysABP']<-last.x['NISysABP.(1.44e+03,2.16e+03]']
x[x$pid == i,'24-48NISysABP']<-last.x['NISysABP.(2.16e+03,2.88e+03]']
break;
}
#large_file[,paste(names(last.x), 'last', sep='.')] <- last.x;
#last_value <- tapply(X=large_file$variable[idx], INDEX=large_file$variable[idx], tail, n = 1)
#data frame x for EM
#vars.l <- $name[(!vars$name %in% large_file$variable)]
#idx <- which(large_file$var %in% vars.l);
#last_24.bp <- tapply(X=d$value[idx], INDEX=d$var[idx], tail, n = 1)
last.x
values
var.bins
idx
require(sampling)
require(caTools)
## Clean workspace
rm(list=ls());
setwd("/Users/ning/Desktop/cs497r/EM\ on\ matrix\ normal/")
result_data = read.csv("./data/Outcomes-a.txt")  # read csv file
large_file = read.csv("./small_file.txt")
my_small_result = result_data[1:100, ]
#stratified sampling based on the same mortality rate:
#70% train, 30% test
train_rows = sample.split(my_small_result$In.hospital_death, SplitRatio=0.7)
train = my_small_result[train_rows,]
test  = my_small_result[train_rows==FALSE,]
#test if it is the correct split:
#dim(train[train$mortality==0,])/dim(test[train$mortality==0,])
#class 0 (not die):
class0_pid = train[train$In.hospital_death == 0, "RecordID"]
#class0_pid
#large file preprocessing:
large_file$time_stamp <- as.character(large_file$time_stamp);
large_file$time_stamp <- sapply(strsplit(large_file$time,":"), function(y) { y <- as.numeric(y); y[1]*60 + y[2]; });
#moving window and time bins
time_resolution = 24
window = 12
edges  <- seq(0, 60*48, by = 60*window);
#for each patient
x <- data.frame(
'pid' = class0_pid
)
for(i in x$pid){
print(x$pid)
#get subsample:
sub = large_file[large_file$pid==i,];
#  print(sub)
#do HR:
idx = which(sub$variable== 'HR')
if(length(idx)>0){
time_stamp.bins <- cut(sub$time_stamp[idx], breaks = edges, include.lowest = TRUE);
var.bins  <- paste(sub$var[idx], time_stamp.bins, sep='.');
values <- sub$value[idx];
last.x <- tapply(X=values, INDEX=var.bins, tail, n = 1);}
x[x$pid == i,'0-24HR']<-last.x[3]
x[x$pid == i,'12-36HR']<-last.x[1]
x[x$pid == i,'24-48HR']<-last.x[2]
#do Temperature:
idx = which(sub$variable== 'Temp')
if(length(idx)>0){
time_stamp.bins <- cut(sub$time_stamp[idx], breaks = edges, include.lowest = TRUE);
var.bins  <- paste(sub$var[idx], time_stamp.bins, sep='.');
values <- sub$value[idx];
last.x <- tapply(X=values, INDEX=var.bins, tail, n = 1);}
x[x$pid == i,'0-24Temp']<-last.x[3]
x[x$pid == i,'12-36Temp']<-last.x[1]
x[x$pid == i,'24-48Temp']<-last.x[2]
#do RespRate:
idx = which(sub$variable== 'RespRate')
if(length(idx)>0){
time_stamp.bins <- cut(sub$time_stamp[idx], breaks = edges, include.lowest = TRUE);
var.bins  <- paste(sub$var[idx], time_stamp.bins, sep='.');
values <- sub$value[idx];
last.x <- tapply(X=values, INDEX=var.bins, tail, n = 1);}
x[x$pid == i,'0-24RespRate']<-last.x[3]
x[x$pid == i,'12-36RespRate']<-last.x[1]
x[x$pid == i,'24-48RespRate']<-last.x[2]
#do RespRate:
idx = which(sub$variable== 'NIDiasABP')
if(length(idx)>0){
time_stamp.bins <- cut(sub$time_stamp[idx], breaks = edges, include.lowest = TRUE);
var.bins  <- paste(sub$var[idx], time_stamp.bins, sep='.');
values <- sub$value[idx];
last.x <- tapply(X=values, INDEX=var.bins, tail, n = 1);}
x[x$pid == i,'0-24NIDiasABP']<-last.x['NIDiasABP.(720,1.44e+03]']
x[x$pid == i,'12-36NIDiasABP']<-last.x['NIDiasABP.(1.44e+03,2.16e+03]']
x[x$pid == i,'24-48NIDiasABP']<-last.x['NIDiasABP.(2.16e+03,2.88e+03]']
break;
#do NISysABP:
idx = which(sub$variable== 'NISysABP')
if(length(idx)>0){
time_stamp.bins <- cut(sub$time_stamp[idx], breaks = edges, include.lowest = TRUE);
var.bins  <- paste(sub$var[idx], time_stamp.bins, sep='.');
values <- sub$value[idx];
last.x <- tapply(X=values, INDEX=var.bins, tail, n = 1);}
x[x$pid == i,'0-24NISysABP']<-last.x['NISysABP.(720,1.44e+03]']
x[x$pid == i,'12-36NISysABP']<-last.x['NISysABP.(1.44e+03,2.16e+03]']
x[x$pid == i,'24-48NISysABP']<-last.x['NISysABP.(2.16e+03,2.88e+03]']
break;
}
#large_file[,paste(names(last.x), 'last', sep='.')] <- last.x;
#last_value <- tapply(X=large_file$variable[idx], INDEX=large_file$variable[idx], tail, n = 1)
#data frame x for EM
#vars.l <- $name[(!vars$name %in% large_file$variable)]
#idx <- which(large_file$var %in% vars.l);
#last_24.bp <- tapply(X=d$value[idx], INDEX=d$var[idx], tail, n = 1)
x[1,]
require(sampling)
require(caTools)
## Clean workspace
rm(list=ls());
setwd("/Users/ning/Desktop/cs497r/EM\ on\ matrix\ normal/")
result_data = read.csv("./data/Outcomes-a.txt")  # read csv file
large_file = read.csv("./small_file.txt")
my_small_result = result_data[1:100, ]
#stratified sampling based on the same mortality rate:
#70% train, 30% test
train_rows = sample.split(my_small_result$In.hospital_death, SplitRatio=0.7)
train = my_small_result[train_rows,]
test  = my_small_result[train_rows==FALSE,]
#test if it is the correct split:
#dim(train[train$mortality==0,])/dim(test[train$mortality==0,])
#class 0 (not die):
class0_pid = train[train$In.hospital_death == 0, "RecordID"]
#class0_pid
#large file preprocessing:
large_file$time_stamp <- as.character(large_file$time_stamp);
large_file$time_stamp <- sapply(strsplit(large_file$time,":"), function(y) { y <- as.numeric(y); y[1]*60 + y[2]; });
#moving window and time bins
time_resolution = 24
window = 12
edges  <- seq(0, 60*48, by = 60*window);
#for each patient
x <- data.frame(
'pid' = class0_pid
)
for(i in x$pid){
print(x$pid)
#get subsample:
sub = large_file[large_file$pid==i,];
#  print(sub)
#do HR:
idx = which(sub$variable== 'HR')
if(length(idx)>0){
time_stamp.bins <- cut(sub$time_stamp[idx], breaks = edges, include.lowest = TRUE);
var.bins  <- paste(sub$var[idx], time_stamp.bins, sep='.');
values <- sub$value[idx];
last.x <- tapply(X=values, INDEX=var.bins, tail, n = 1);}
x[x$pid == i,'0-24HR']<-last.x[3]
x[x$pid == i,'12-36HR']<-last.x[1]
x[x$pid == i,'24-48HR']<-last.x[2]
#do Temperature:
idx = which(sub$variable== 'Temp')
if(length(idx)>0){
time_stamp.bins <- cut(sub$time_stamp[idx], breaks = edges, include.lowest = TRUE);
var.bins  <- paste(sub$var[idx], time_stamp.bins, sep='.');
values <- sub$value[idx];
last.x <- tapply(X=values, INDEX=var.bins, tail, n = 1);}
x[x$pid == i,'0-24Temp']<-last.x[3]
x[x$pid == i,'12-36Temp']<-last.x[1]
x[x$pid == i,'24-48Temp']<-last.x[2]
#do RespRate:
idx = which(sub$variable== 'RespRate')
if(length(idx)>0){
time_stamp.bins <- cut(sub$time_stamp[idx], breaks = edges, include.lowest = TRUE);
var.bins  <- paste(sub$var[idx], time_stamp.bins, sep='.');
values <- sub$value[idx];
last.x <- tapply(X=values, INDEX=var.bins, tail, n = 1);}
x[x$pid == i,'0-24RespRate']<-last.x[3]
x[x$pid == i,'12-36RespRate']<-last.x[1]
x[x$pid == i,'24-48RespRate']<-last.x[2]
#do RespRate:
idx = which(sub$variable== 'NIDiasABP')
if(length(idx)>0){
time_stamp.bins <- cut(sub$time_stamp[idx], breaks = edges, include.lowest = TRUE);
var.bins  <- paste(sub$var[idx], time_stamp.bins, sep='.');
values <- sub$value[idx];
last.x <- tapply(X=values, INDEX=var.bins, tail, n = 1);}
x[x$pid == i,'0-24NIDiasABP']<-last.x['NIDiasABP.(720,1.44e+03]']
x[x$pid == i,'12-36NIDiasABP']<-last.x['NIDiasABP.(1.44e+03,2.16e+03]']
x[x$pid == i,'24-48NIDiasABP']<-last.x['NIDiasABP.(2.16e+03,2.88e+03]']
#do NISysABP:
idx = which(sub$variable== 'NISysABP')
if(length(idx)>0){
time_stamp.bins <- cut(sub$time_stamp[idx], breaks = edges, include.lowest = TRUE);
var.bins  <- paste(sub$var[idx], time_stamp.bins, sep='.');
values <- sub$value[idx];
last.x <- tapply(X=values, INDEX=var.bins, tail, n = 1);}
x[x$pid == i,'0-24NISysABP']<-last.x['NISysABP.(720,1.44e+03]']
x[x$pid == i,'12-36NISysABP']<-last.x['NISysABP.(1.44e+03,2.16e+03]']
x[x$pid == i,'24-48NISysABP']<-last.x['NISysABP.(2.16e+03,2.88e+03]']
break;
}
#large_file[,paste(names(last.x), 'last', sep='.')] <- last.x;
#last_value <- tapply(X=large_file$variable[idx], INDEX=large_file$variable[idx], tail, n = 1)
#data frame x for EM
#vars.l <- $name[(!vars$name %in% large_file$variable)]
#idx <- which(large_file$var %in% vars.l);
#last_24.bp <- tapply(X=d$value[idx], INDEX=d$var[idx], tail, n = 1)
x[1,]
require(sampling)
require(caTools)
## Clean workspace
rm(list=ls());
setwd("/Users/ning/Desktop/cs497r/EM\ on\ matrix\ normal/")
result_data = read.csv("./data/Outcomes-a.txt")  # read csv file
large_file = read.csv("./small_file.txt")
my_small_result = result_data[1:100, ]
#stratified sampling based on the same mortality rate:
#70% train, 30% test
train_rows = sample.split(my_small_result$In.hospital_death, SplitRatio=0.7)
train = my_small_result[train_rows,]
test  = my_small_result[train_rows==FALSE,]
#test if it is the correct split:
#dim(train[train$mortality==0,])/dim(test[train$mortality==0,])
#class 0 (not die):
class0_pid = train[train$In.hospital_death == 0, "RecordID"]
#class0_pid
#large file preprocessing:
large_file$time_stamp <- as.character(large_file$time_stamp);
large_file$time_stamp <- sapply(strsplit(large_file$time,":"), function(y) { y <- as.numeric(y); y[1]*60 + y[2]; });
#moving window and time bins
time_resolution = 24
window = 12
edges  <- seq(0, 60*48, by = 60*window);
#for each patient
x <- data.frame(
'pid' = class0_pid
)
for(i in x$pid){
print(x$pid)
#get subsample:
sub = large_file[large_file$pid==i,];
#  print(sub)
#do HR:
idx = which(sub$variable== 'HR')
if(length(idx)>0){
time_stamp.bins <- cut(sub$time_stamp[idx], breaks = edges, include.lowest = TRUE);
var.bins  <- paste(sub$var[idx], time_stamp.bins, sep='.');
values <- sub$value[idx];
last.x <- tapply(X=values, INDEX=var.bins, tail, n = 1);}
x[x$pid == i,'0-24HR']<-last.x['HR.(720,1.44e+03]']
x[x$pid == i,'12-36HR']<-last.x['HR.(1.44e+03,2.16e+03]']
x[x$pid == i,'24-48HR']<-last.x['HR.(2.16e+03,2.88e+03]']
#do Temperature:
idx = which(sub$variable== 'Temp')
if(length(idx)>0){
time_stamp.bins <- cut(sub$time_stamp[idx], breaks = edges, include.lowest = TRUE);
var.bins  <- paste(sub$var[idx], time_stamp.bins, sep='.');
values <- sub$value[idx];
last.x <- tapply(X=values, INDEX=var.bins, tail, n = 1);}
x[x$pid == i,'0-24Temp']<-last.x['Temp.(720,1.44e+03]']
x[x$pid == i,'12-36Temp']<-last.x['Temp.(1.44e+03,2.16e+03]']
x[x$pid == i,'24-48Temp']<-last.x['Temp.(2.16e+03,2.88e+03]']
#do RespRate:
idx = which(sub$variable== 'RespRate')
if(length(idx)>0){
time_stamp.bins <- cut(sub$time_stamp[idx], breaks = edges, include.lowest = TRUE);
var.bins  <- paste(sub$var[idx], time_stamp.bins, sep='.');
values <- sub$value[idx];
last.x <- tapply(X=values, INDEX=var.bins, tail, n = 1);}
x[x$pid == i,'0-24RespRate']<-last.x['RespRate.(720,1.44e+03]']
x[x$pid == i,'12-36RespRate']<-last.x['RespRate.(1.44e+03,2.16e+03]']
x[x$pid == i,'24-48RespRate']<-last.x['RespRate.(2.16e+03,2.88e+03]']
#do RespRate:
idx = which(sub$variable== 'NIDiasABP')
if(length(idx)>0){
time_stamp.bins <- cut(sub$time_stamp[idx], breaks = edges, include.lowest = TRUE);
var.bins  <- paste(sub$var[idx], time_stamp.bins, sep='.');
values <- sub$value[idx];
last.x <- tapply(X=values, INDEX=var.bins, tail, n = 1);}
x[x$pid == i,'0-24NIDiasABP']<-last.x['NIDiasABP.(720,1.44e+03]']
x[x$pid == i,'12-36NIDiasABP']<-last.x['NIDiasABP.(1.44e+03,2.16e+03]']
x[x$pid == i,'24-48NIDiasABP']<-last.x['NIDiasABP.(2.16e+03,2.88e+03]']
#do NISysABP:
idx = which(sub$variable== 'NISysABP')
if(length(idx)>0){
time_stamp.bins <- cut(sub$time_stamp[idx], breaks = edges, include.lowest = TRUE);
var.bins  <- paste(sub$var[idx], time_stamp.bins, sep='.');
values <- sub$value[idx];
last.x <- tapply(X=values, INDEX=var.bins, tail, n = 1);}
x[x$pid == i,'0-24NISysABP']<-last.x['NISysABP.(720,1.44e+03]']
x[x$pid == i,'12-36NISysABP']<-last.x['NISysABP.(1.44e+03,2.16e+03]']
x[x$pid == i,'24-48NISysABP']<-last.x['NISysABP.(2.16e+03,2.88e+03]']
break;
}
#large_file[,paste(names(last.x), 'last', sep='.')] <- last.x;
#last_value <- tapply(X=large_file$variable[idx], INDEX=large_file$variable[idx], tail, n = 1)
#data frame x for EM
#vars.l <- $name[(!vars$name %in% large_file$variable)]
#idx <- which(large_file$var %in% vars.l);
#last_24.bp <- tapply(X=d$value[idx], INDEX=d$var[idx], tail, n = 1)
x[1,]
require(sampling)
require(caTools)
## Clean workspace
rm(list=ls());
setwd("/Users/ning/Desktop/cs497r/EM\ on\ matrix\ normal/")
result_data = read.csv("./data/Outcomes-a.txt")  # read csv file
large_file = read.csv("./small_file.txt")
my_small_result = result_data[1:100, ]
#stratified sampling based on the same mortality rate:
#70% train, 30% test
train_rows = sample.split(my_small_result$In.hospital_death, SplitRatio=0.7)
train = my_small_result[train_rows,]
test  = my_small_result[train_rows==FALSE,]
#test if it is the correct split:
#dim(train[train$mortality==0,])/dim(test[train$mortality==0,])
#class 0 (not die):
class0_pid = train[train$In.hospital_death == 0, "RecordID"]
#class0_pid
#large file preprocessing:
large_file$time_stamp <- as.character(large_file$time_stamp);
large_file$time_stamp <- sapply(strsplit(large_file$time,":"), function(y) { y <- as.numeric(y); y[1]*60 + y[2]; });
#moving window and time bins
time_resolution = 24
window = 12
edges  <- seq(0, 60*48, by = 60*window);
#for each patient
x <- data.frame(
'pid' = class0_pid
)
for(i in x$pid){
print(x$pid)
#get subsample:
sub = large_file[large_file$pid==i,];
#  print(sub)
#do HR:
idx = which(sub$variable== 'HR')
if(length(idx)>0){
time_stamp.bins <- cut(sub$time_stamp[idx], breaks = edges, include.lowest = TRUE);
var.bins  <- paste(sub$var[idx], time_stamp.bins, sep='.');
values <- sub$value[idx];
last.x <- tapply(X=values, INDEX=var.bins, tail, n = 1);}
x[x$pid == i,'0-24HR']<-last.x['HR.(720,1.44e+03]']
x[x$pid == i,'12-36HR']<-last.x['HR.(1.44e+03,2.16e+03]']
x[x$pid == i,'24-48HR']<-last.x['HR.(2.16e+03,2.88e+03]']
#do Temperature:
idx = which(sub$variable== 'Temp')
if(length(idx)>0){
time_stamp.bins <- cut(sub$time_stamp[idx], breaks = edges, include.lowest = TRUE);
var.bins  <- paste(sub$var[idx], time_stamp.bins, sep='.');
values <- sub$value[idx];
last.x <- tapply(X=values, INDEX=var.bins, tail, n = 1);}
x[x$pid == i,'0-24Temp']<-last.x['Temp.(720,1.44e+03]']
x[x$pid == i,'12-36Temp']<-last.x['Temp.(1.44e+03,2.16e+03]']
x[x$pid == i,'24-48Temp']<-last.x['Temp.(2.16e+03,2.88e+03]']
#do RespRate:
idx = which(sub$variable== 'RespRate')
if(length(idx)>0){
time_stamp.bins <- cut(sub$time_stamp[idx], breaks = edges, include.lowest = TRUE);
var.bins  <- paste(sub$var[idx], time_stamp.bins, sep='.');
values <- sub$value[idx];
last.x <- tapply(X=values, INDEX=var.bins, tail, n = 1);}
x[x$pid == i,'0-24RespRate']<-last.x['RespRate.(720,1.44e+03]']
x[x$pid == i,'12-36RespRate']<-last.x['RespRate.(1.44e+03,2.16e+03]']
x[x$pid == i,'24-48RespRate']<-last.x['RespRate.(2.16e+03,2.88e+03]']
#do RespRate:
idx = which(sub$variable== 'NIDiasABP')
if(length(idx)>0){
time_stamp.bins <- cut(sub$time_stamp[idx], breaks = edges, include.lowest = TRUE);
var.bins  <- paste(sub$var[idx], time_stamp.bins, sep='.');
values <- sub$value[idx];
last.x <- tapply(X=values, INDEX=var.bins, tail, n = 1);}
x[x$pid == i,'0-24NIDiasABP']<-last.x['NIDiasABP.(720,1.44e+03]']
x[x$pid == i,'12-36NIDiasABP']<-last.x['NIDiasABP.(1.44e+03,2.16e+03]']
x[x$pid == i,'24-48NIDiasABP']<-last.x['NIDiasABP.(2.16e+03,2.88e+03]']
#do NISysABP:
idx = which(sub$variable== 'NISysABP')
if(length(idx)>0){
time_stamp.bins <- cut(sub$time_stamp[idx], breaks = edges, include.lowest = TRUE);
var.bins  <- paste(sub$var[idx], time_stamp.bins, sep='.');
values <- sub$value[idx];
last.x <- tapply(X=values, INDEX=var.bins, tail, n = 1);}
x[x$pid == i,'0-24NISysABP']<-last.x['NISysABP.(720,1.44e+03]']
x[x$pid == i,'12-36NISysABP']<-last.x['NISysABP.(1.44e+03,2.16e+03]']
x[x$pid == i,'24-48NISysABP']<-last.x['NISysABP.(2.16e+03,2.88e+03]']
}
#large_file[,paste(names(last.x), 'last', sep='.')] <- last.x;
#last_value <- tapply(X=large_file$variable[idx], INDEX=large_file$variable[idx], tail, n = 1)
#data frame x for EM
#vars.l <- $name[(!vars$name %in% large_file$variable)]
#idx <- which(large_file$var %in% vars.l);
#last_24.bp <- tapply(X=d$value[idx], INDEX=d$var[idx], tail, n = 1)
x
View(x)
View(x)
View(x)
View(x)
setwd("/Users/ning/Desktop/cs534/final\ project/data/ml-latest-small/")
result_data = read.csv("./rating.csv")  # read csv file
setwd("/Users/ning/Desktop/cs534/final\ project/data/ml-latest-small/")
result_data = read.csv("./ratings.csv")  # read csv file
dim(result_data)
setwd("/Users/ning/Desktop/cs534/final\ project/data/ml-latest-small/")
result_data = read.csv("./ratings.csv")  # read csv file
print(unique(result_data$movieId))
setwd("/Users/ning/Desktop/cs534/final\ project/data/ml-latest-small/")
result_data = read.csv("./ratings.csv")  # read csv file
print(length(unique(result_data$movieId)))
